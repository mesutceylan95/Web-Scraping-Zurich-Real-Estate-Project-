#%%

# Part II: Data Cleansing and Preperation for Tableau Visualization

# transforming data into pandas dataframe 
import pandas as pd
import numpy as np

df = pd.read_csv("zurich_main2.csv", encoding="ISO-8859-1", sep=';')

#cleaning data to include only apartments and related property type. Beginnig was 990
#after cleaning I have 696 observations 
df = df[(df.property_type !='Commercial property') &
        (df.property_type !='Parking space') &
        (df.property_type !='Parking space  garage') &
        (df.property_type !='Single garage') &
        (df.property_type !='Underground garage') &
        (df.property_type !='Building land') &
        (df.property_type !='Hobby room')]


# cleaning no price information posts. After, 685 observations
df = df[(df.price !='On request')]



# cleaning no adress post_code information. 685 observation
df = df[(df.post_code != 'not-existing')]


a =df


# manipulates floor column to replace #_of_rooms column with room values in floor column
a['#_of_rooms'] = np.where((a['floor'] != "Floor 1") & (a['floor'] != "Floor 2") &
  (a['floor'] != "Floor 3") & (a['floor'] != "Floor 4") & (a['floor'] != "Floor 5") &
  (a['floor'] != "Floor 6") & (a['floor'] != "Floor 7") & (a['floor'] != "Floor 8") &
  (a['floor'] != "Floor 9") & (a['floor'] != "Ground floor") & (a['floor'] != "not-existing") &
  (a['floor'] != "Basement"), a['floor'], a['#_of_rooms'])


# manipulates living space to replace #_of_rooms column with room values in living space column
a['#_of_rooms'] = np.where((a['living_space'] == "1 room") | (a['living_space'] == "2 rooms") | (a['living_space'] == "1½ rooms") |
  (a['living_space'] == "2½ rooms") | (a['living_space'] == "3 rooms") | (a['living_space'] == "3½ rooms") |
  (a['living_space'] == "4 rooms") | (a['living_space'] == "4½ rooms") | (a['living_space'] == "5 rooms") |
  (a['living_space'] == "5½ rooms") |(a['living_space'] == "7 rooms") |(a['living_space'] == "9 rooms"), a['living_space'], a['#_of_rooms'])


# manipulates living space to replace floor column with floor values within living space column
a['floor'] = np.where((a['living_space'] == "Floor 1") | (a['living_space'] == "Floor 2") |
  (a['living_space'] == "Floor 3") | (a['living_space'] == "Floor 4") | (a['living_space'] == "Floor 5") |
  (a['living_space'] == "Floor 7") | (a['living_space'] == "Ground floor") |(a['living_space'] == "Basement"),
  a['living_space'], a['floor'])

        
# assigning null values instead of wrong ones in #_of_rooms column  
a['#_of_rooms'].replace(["Floor 10", "Floor 11", "Floor 12", "Floor 15", "Floor 19", "not-existing", "Floor 14"],
  ['null','null', 'null', 'null', 'null', 'null', 'null'],inplace=True)
        
       
# assigning null values instead of wrong ones in floor column
a['floor'] = np.where((a['floor'] !="Floor 1") &(a['floor'] !="Floor 2") & (a['floor'] !="Floor 3") &
        (a['floor'] !="Floor 4") & (a['floor'] !="Floor 5") & (a['floor'] !="Floor 6") & (a['floor'] !="Floor 7") &
        (a['floor'] !="Floor 15") & (a['floor'] !="Floor 8") & (a['floor'] !="Floor 9") & (a['floor'] !="Floor 11") &
        (a['floor'] !="Floor 12") & (a['floor'] !="Floor 19") & (a['floor'] !="Floor 10") & (a['floor'] !="Floor 14") & 
        (a['floor'] !="Ground floor") & (a['floor'] !="Basement") , "null", a['floor'])

  
# assigning null values instead of wrong ones in living_space column
a['living_space'] = np.where((a['living_space'] == "1 room") | (a['living_space'] == "2 rooms") | (a['living_space'] == "1½ rooms") |
  (a['living_space'] == "2½ rooms") | (a['living_space'] == "3 rooms") | (a['living_space'] == "3½ rooms") |
  (a['living_space'] == "5½ rooms") |(a['living_space'] == "4 rooms") | (a['living_space'] == "4½ rooms") |(a['living_space'] == "7 rooms") |  
  (a['living_space'] == "9 rooms") |(a['living_space'] == "Basement") | (a['living_space'] == "5 rooms") |
  (a['living_space'] == "Floor 1") | (a['living_space'] == "Floor 2") | (a['living_space'] == "Floor 3") |
  (a['living_space'] == "Floor 4") | (a['living_space'] == "Floor 5") | (a['living_space'] == "Floor 7") |
  (a['living_space'] == "Ground floor") | (a['living_space'] == "not-existing"), "null", a['living_space'])



# deleting CHF at price column
a['price']=a['price'].str.replace('CHF ', '')
 

# replacing ½ with .5 at #_of_rooms
a['#_of_rooms']=a['#_of_rooms'].str.replace('½', '.5')
  

# replacing 6.7, 7, 8, 9 rooms with >=6 rooms at #_of_rooms column
a['#_of_rooms']=a['#_of_rooms'].replace(['6 rooms', '6.5 rooms', '7 rooms', '7.5 rooms', '8.5 rooms', '9 rooms'], ['>=6 rooms',
  '>=6 rooms', '>=6 rooms', '>=6 rooms', '>=6 rooms', '>=6 rooms'])
  


# deleting m^2 from living_space column value
a['living_space']=a['living_space'].str.replace('m²', '')


  
#%%   

#adding district names column
a['district_name']= np.nan

#%%   

#adding district names to its column accoding to post codes

a['district_name']= np.where((a['post_code'] == "8050"), "Oerlikon", a['district_name'])
a['district_name']= np.where((a['post_code'] == "8046"), "Affoltern", a['district_name'])
a['district_name']= np.where((a['post_code'] == "8052"), "Seebach", a['district_name'])
a['district_name']= np.where((a['post_code'] == "8049"), "Höngg", a['district_name'])
a['district_name']= np.where((a['post_code'] == "8048"), "Altstetten", a['district_name'])
a['district_name']= np.where((a['post_code'] == "8047"), "Albisrieden", a['district_name'])
a['district_name']= np.where((a['post_code'] == "8055"), "Friesenberg", a['district_name'])
a['district_name']= np.where((a['post_code'] == "8063"), "Friesenberg", a['district_name'])
a['district_name']= np.where((a['post_code'] == "8045"), "Alt-Wiedikon", a['district_name'])
a['district_name']= np.where((a['post_code'] == "8002"), "Enge", a['district_name'])
a['district_name']= np.where((a['post_code'] == "8038"), "Wollishofen", a['district_name'])
a['district_name']= np.where((a['post_code'] == "8041"), "Leimbach", a['district_name'])
a['district_name']= np.where((a['post_code'] == "8003"), "Sihlfeld/Werd", a['district_name'])
a['district_name']= np.where((a['post_code'] == "8004"), "Aussersihl", a['district_name'])
a['district_name']= np.where((a['post_code'] == "8005"), "Industriequartier", a['district_name'])
a['district_name']= np.where((a['post_code'] == "8037"), "Wipkingen", a['district_name'])
a['district_name']= np.where((a['post_code'] == "8057"), "Unter/Oberstrass", a['district_name'])
a['district_name']= np.where((a['post_code'] == "8006"), "Wipkingen", a['district_name'])
a['district_name']= np.where((a['post_code'] == "8001"), "Altstadt", a['district_name'])
a['district_name']= np.where((a['post_code'] == "8008"), "Riesbach", a['district_name'])
a['district_name']= np.where((a['post_code'] == "8032"), "Hirslanden", a['district_name'])
a['district_name']= np.where((a['post_code'] == "8053"), "Witikon", a['district_name'])
a['district_name']= np.where((a['post_code'] == "8044"), "Hottingen", a['district_name'])
a['district_name']= np.where((a['post_code'] == "8051"), "Schwamendingen", a['district_name'])



#%%   

# extracting clean data to csv file
a.to_csv("zurich_main2_clean.csv", index=False, encoding="ISO-8859-1", sep=',')
